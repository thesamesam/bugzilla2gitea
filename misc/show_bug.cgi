#!/usr/bin/perl
# NAME: show_bug.cgi
# AUTHOR: sam <sam@cmpct.info>

# Drop-in replacement for Bugzilla's show_bug.cgi
# Will use a map csv file (old Bugzilla to new Gitea bugs) to redirect users to the new bugs

use strict;
use warnings;
use CGI;

# Config
# $BUG_MAP: Path to the [project,bugzilla_id,gitea_id] CSV generated by bugzilla2gitea
# $REPO_MAP: Hash (key-value) for [bugzilla_project => owner/repo_in_gitea]
# $GITEA_URL: URL (trailing slash) for your Gitea instance, used with value in $REPO_MAP for a URL
my $BUG_MAP   = "../bugzilla2gitea_old_to_new.csv";
my %REPO_MAP  = (
    "cmpctircd"      => "cmpct/cmpctircd-perl",
    "cmpctircd.NET"  => "cmpct/cmpctircd",
    "ircscan"        => "sam/ircscan"
);
my $GITEA_URL = "https://git.cmpct.info/";

my $cgi = CGI->new();
my $bug = $cgi->param('id');

open(my $FH, "<", $BUG_MAP) or die "Couldn't read map: $!\r\n";

while(my $row = <$FH>) {
    # Read the CSV file, strip the newline
    my ($project, $bz_id, $git_id) = split(',', $row);
    $git_id =~ s/\r//;
    $git_id =~ s/\n//;

    if($bz_id eq $bug) {
        # This is the bug the user asked for
        # This means that there is a Gitea equivalent
        my $URL = $GITEA_URL . $REPO_MAP{$project} . "/issues/" . $git_id;
        print $cgi->redirect($URL);
        print "Redirecting you to $URL\r\n";
        close($FH);
        exit;
    }
}

close($FH);

# If we get to this point, no matches found
print $cgi->header("text/html", "404 Not Found");
print $cgi->h1("404 Not Found");
print "Unfortunately, this bug does not exist.<br />\r\n";
print "It may not have been converted during a migration process (e.g. bugzilla2gitea), or perhaps never existed.<br />\r\n";
print "Try looking " . $cgi->a({href => $GITEA_URL}, "here") . " instead.\r\n";